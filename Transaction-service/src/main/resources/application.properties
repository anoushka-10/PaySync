# Identify this service
spring.application.name=transaction-service

# Set the port this service runs on
server.port=8082
jwt.secret=${JWT_SECRET}

# Eureka registration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_URL}

# DB Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.kafka.bootstrap-servers=${KAFKA_URL}
spring.elasticsearch.uris=${ES_URL}
# Database transaction logging
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.springframework.jdbc.datasource.DataSourceTransactionManager=DEBUG
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=DEBUG

# SQL logging to see what's actually happening
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Connection pool logging
logging.level.com.zaxxer.hikari=DEBUG
# Hibernate & JPA settings
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Elasticsearch Configuration

spring.data.elasticsearch.client.socket-timeout=30000
